<% layout('layouts/boilerplate')%>

    <div class="d-flex justify-content-between ">
        <div>
            <h3 class="mt-5 mb-3">
                <a href="/manage/projects" class="tree-menu-link">Quản lý</a>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                    <path
                        d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z" />
                </svg>
                <a class="tree-menu-link" href="/projects/<%= project.id %>">
                    <%= project.title %>
                </a>
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                    class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                    <path
                        d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z" />
                </svg>
                Tài chính
            </h3>
        </div>
        <div class="d-flex flex-column flex-column-reverse">
            <a href="/projects/<%= project.id %>/finance/new" class="btn btn-primary"><svg
                    xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg"
                    viewBox="0 0 16 16">
                    <path fill-rule="evenodd"
                        d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
                </svg></a>
        </div>
    </div>

    <div class="manageTable mt-2">
        <div class="card" style="border: none">
            <div class="card-header border">
                <h3 class="card-title">Thống kê</h3>
            </div>
            <div class="card-body row p-0">
                <div class="col-lg-8">
                    <div class=" mt-3 mb-3 py-3 px-3 justify-content-between border rounded-3 d-flex flex-column"
                        style="height:800px">
                        <div class="d-flex justify-content-center">
                            <form onsubmit="fetchChartInfo(event)" id="daterange" style="width: 60%">
                                <div>
                                    <select name="options" id="" class="form-select daterange-select">
                                        <option value="month" selected>Theo tháng</option>
                                        <option value="date">Theo ngày</option>
                                    </select>
                                </div>
                                <div class=" input-daterange d-flex flex-md-row flex-column" style="">
                                    <div class=" input-group mx-0">
                                        <div class="input-group-text">Từ</div>
                                        <input type="month" class="form-control daterange-comp" name="from" value="">
                                    </div>
                                    <div class=" input-group mx-0">
                                        <div class="input-group-text">Tới</div>
                                        <input type="month" class="form-control daterange-comp" name="to" value="">
                                    </div>

                                </div>
                                <button hidden></button>
                            </form>
                        </div>
                        <div class="row mt-5">
                            <a href="/projects/<%= project.id %>/finance" style="text-decoration: none; ">
                                <div class="text-center">
                                    <!-- <div class="col-lg-6 offset-lg-3 col-8 offset-2"> -->
                                    <div id="barChart">

                                    </div>
                                    <!-- </div> -->
                                </div>
                            </a>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="manageTable mb-5">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Báo cáo tài chính</h3>
            </div>
            <div class="card-body">
                <div class="text-center mt-3 mb-3 row">
                    <div class="col-lg-2 offset-lg-5 col-4 offset-4">
                        <input type="month" id="monthPickerFinance" class="form-control" name="" />
                    </div>
                </div>
                <table id="financetable" class="display" style="width:100%">
                </table>
            </div>
        </div>
    </div>


    <script>
        google.charts.load('current', { packages: ['corechart', 'bar'] });
        const currentDate = new Date();
        const year = currentDate.getFullYear();
        const month = String(currentDate.getMonth() + 1).padStart(2, '0');
        const day = String(currentDate.getDate()).padStart(2, '0');

        async function fetchChartInfo(event) {
            event.preventDefault();
            const form = event.target; // get the form element from the event

            const formData = new FormData(form); // create a new FormData object from the form
            const option = formData.get('options');
            const from = formData.get("from"); // get the value of the "from" input
            const to = formData.get("to"); // get the value of the "to" input
            if (from && to) {
                const response = await fetch(`/manage/finance/charts?from=${from}&to=${to}&option=${option}&project=<%= project.id %>`, {
                    method: 'get'
                })
                const data = await response.json();
                console.log(data);
                google.charts.setOnLoadCallback(() => {
                    drawColChart(data[1])
                });
            }

        }
        document.querySelector("input[name='to']").value = `${year}-${month}`;
        document.querySelector("input[name='from']").value = `${year - 1}-${month}`;
        document.querySelector('#daterange').querySelector('button').click();
        $(".daterange-comp").on('change', function () {
            document.querySelector('#daterange').querySelector('button').click();
        })
        $(".daterange-select").on('change', function () {

            document.querySelectorAll('.daterange-comp').forEach(el => el.type = this.value)

        })



        // async function fetchChartInfo(value) {
        //     const range = value;
        //     const response = await fetch(`/manage/finance/charts?range=${range}`, {
        //         method: 'get'
        //     })
        //     const data = await response.json();
        //     console.log(data);
        // }



        function drawColChart(input) {
            let barData = [['', 'Doanh thu', 'Chi phí', 'Lợi nhuận']]
            for (const [date, value] of Object.entries(input)) {
                barData.push([date, value.revenue, value.expense, value.revenue > value.expense ? value.revenue - value.expense : 0])
            }
            var data = google.visualization.arrayToDataTable(barData);

            var options = {
                title: '',
                // curveType: 'function'
                height: 500,
            };

            var chart = new google.charts.Bar(document.getElementById('barChart'));

            chart.draw(data, google.charts.Bar.convertOptions(options));
        }

    </script>

    <script>
        $(document).ready(async function () {
            const table1 = $('#financetable').DataTable({
                columns: [{
                    title: 'Người tạo'
                },
                {
                    title: 'Ngày tạo',
                },
                { title: 'Tiêu đề' },
                { title: 'Ghi chú' },
                { title: 'Loại' },
                { title: 'Số tiền(VND)' },
                { title: '' },
                ],
                responsive: true,
            });

            const currentDate = new Date();
            const year = currentDate.getFullYear();
            const month = String(currentDate.getMonth() + 1).padStart(2, '0');
            const day = String(currentDate.getDate()).padStart(2, '0');
            async function fetchInfoFinance(value) {
                const date = value;
                let url = `<%= process.env.DOMAIN_NAME %>/manage/finance/fetch?month=${value}&projectId=${<%= project.id %>} `;
                const response = await fetch(url, {
                    method: 'get',
                })
                const data = await response.json();
                data.forEach(el => {
                    console.log(el);
                    table1.row.add(el).draw(false);
                });
            }


            document.querySelector('#monthPickerFinance').value = `${ year } -${ month } `;
            await fetchInfoFinance(`${ year } -${ month }`);
            $('#monthPickerFinance').on('change', async function () {
                table1.clear().draw();
                await fetchInfoFinance(this.value);

            })

        })
    </script>